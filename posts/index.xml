<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Zlace Home</title><link>https://zlace0x.github.io/posts/</link><description>Recent content in Posts on Zlace Home</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 20 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://zlace0x.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>My web3 stack</title><link>https://zlace0x.github.io/posts/my-web3-stack/</link><pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate><guid>https://zlace0x.github.io/posts/my-web3-stack/</guid><description>It’s been almost two years since I jumped full-time into the web3 space. Over time, I’ve refined the tools I use to optimize for productivity
MacOs Apps # VSCode (duh) Warp - Terminal Bruno - Git-based API Client (Postman Alternative) DevUtils - Swiss-army knife of tools (Base64, SVG, JSON, JWT decode/conversions) Mockoon - Mock an API in seconds Postico 2 - Postgres Client Medis - Redis Client Frontend Libraries # Viem NextJs Tailwindcss Backend #Mostly project dependent but here are some of my defaults</description></item><item><title>Understanding gasless transactions</title><link>https://zlace0x.github.io/posts/gasless-transactions/</link><pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate><guid>https://zlace0x.github.io/posts/gasless-transactions/</guid><description>In an ideal world, web3 experiences should feel as seamless as web2. One of the first UX challenges for new web3 users is understanding the concept of gas. Here, we’ll explore ways to abstract gas costs from users and the technical methods to achieve this.
Someone has to pay gas #Gas is essentially a fee for using blockchain resources and serves as a safeguard against spam. In Ethereum Virtual Machine (EVM), the gas payer is always the “from” address in a typical EIP-1559 transaction.</description></item><item><title>Writing my first EIP</title><link>https://zlace0x.github.io/posts/my-first-eip/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://zlace0x.github.io/posts/my-first-eip/</guid><description>Suberra is a Web3 payment gateway specializing in subscription payments. One key requirement for subscriptions is pulling funds from users at recurring intervals. In designing a secure solution, we saw the need for a generalized standard that could benefit others. Our EIP extends ERC-20 to include an auto-renewable allowance, enabling funds to be spent over time.
Draft Submission &amp;amp; Discussion #A prerequisite for an EIP is open discourse. We submitted our draft EIP on Ethereum Magicians and received limited feedback, prompting us to seek input from our contacts.</description></item></channel></rss>